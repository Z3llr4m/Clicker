
<!-- ===================== -->
<!-- üç™ –ü–ï–ß–ï–ù–¨–ö–ê -->
<!-- ===================== -->
<img id="cookie" src="https://i.imgur.com/hb7mM2A.png" alt="Cookie">

<!-- ===================== -->
<!-- üè† –ó–î–ê–ù–ò–Ø -->
<!-- ===================== -->
<div id="buildings"></div>

<!-- ===================== -->
<!-- üîº –ê–ü–ì–†–ï–ô–î–´ -->
<!-- ===================== -->
<div id="upgrades"></div>

<!-- ===================== -->
<!-- üåü –ü–†–ï–°–¢–ò–ñ -->
<!-- ===================== -->
<button id="prestigeButton">–°–¥–µ–ª–∞—Ç—å –ø—Ä–µ—Å—Ç–∏–∂</button>

<!-- ===================== -->
<!-- üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê -->
<!-- ===================== -->
<div id="stats" class="stats-window">
    <p id="totalTime">–í—Ä–µ–º—è –≤ –∏–≥—Ä–µ: 00:00:00</p>
    <p id="totalCookies">–í—Å–µ–≥–æ –ø–µ—á–µ–Ω–µ–∫: 0</p>
    <p id="golden">–ó–æ–ª–æ—Ç—ã–µ –ø–µ—á–µ–Ω—å–∫–∏: 0</p>
    <p id="prestiges">–ü—Ä–µ—Å—Ç–∏–∂–µ–π —Å–¥–µ–ª–∞–Ω–æ: 0</p>
    <p id="clicks">–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: 0</p>
    <p id="cps">CPS: 0</p>
</div>

<script src="game.js"></script>
</body>
</html>
// =====================
// üç™ –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ò –ù–ê–°–¢–†–û–ô–ö–ò
// =====================
let cookies = 0;
let totalCookiesEarned = 0;
let cps = 0;
let clicks = 0;
let goldenCookies = 0;
let prestigeCount = 0;
let startTime = Date.now();

const buildings = [
    {name:"–ö—É—Ä—Å–æ—Ä", emoji:"üñ±Ô∏è", baseCost:15, cps:0.1, count:0},
    {name:"–ë–∞–±—É—à–∫–∞", emoji:"üëµ", baseCost:100, cps:1, count:0},
    {name:"–§–µ—Ä–º–∞", emoji:"üåæ", baseCost:1100, cps:8, count:0},
    {name:"–®–∞—Ö—Ç–∞", emoji:"‚õèÔ∏è", baseCost:12000, cps:47, count:0},
    {name:"–§–∞–±—Ä–∏–∫–∞", emoji:"üè≠", baseCost:130000, cps:260, count:0},
    {name:"–ë–∞–Ω–∫", emoji:"üè¶", baseCost:1400000, cps:1400, count:0},
    {name:"–•—Ä–∞–º", emoji:"‚õ™", baseCost:20000000, cps:7800, count:0},
    {name:"–®–∞—Ö—Ç–∞-–ì–∏–≥–∞–Ω—Ç", emoji:"üóª", baseCost:330000000, cps:44000, count:0},
    {name:"–§–∞–±—Ä–∏–∫–∞-–ú–µ–≥–∞—Ç–æ–Ω", emoji:"üè¢", baseCost:5100000000, cps:260000, count:0},
    {name:"–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –†–µ–∑–æ–Ω–∞—Ç–æ—Ä", emoji:"üõ∏", baseCost:75000000000, cps:1600000, count:0},
    {name:"–ú–Ω–æ–≥–æ—Ñ–∞–±—Ä–∏–∫–∞", emoji:"üèóÔ∏è", baseCost:1000000000000, cps:10000000, count:0},
    {name:"–¢—Ä–∞–Ω—Å–≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è", emoji:"üöÄ", baseCost:14000000000000, cps:65000000, count:0},
    {name:"–ú–µ–≥–∞–∫–æ—Å–º–æ—Å", emoji:"üåå", baseCost:170000000000000, cps:430000000, count:0},
    {name:"–í—Å–µ–ª–µ–Ω—Å–∫–∏–π –∑–∞–≤–æ–¥", emoji:"üè∞", baseCost:2100000000000000, cps:3000000000, count:0},
    {name:"–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä", emoji:"üëë", baseCost:26000000000000000, cps:21000000000, count:0},
];

let upgrades = []; // {buildingIndex, level, cost}

// =====================
// üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê
// =====================
function saveGame() {
    localStorage.setItem("cookieClickerSave", JSON.stringify({
        cookies, totalCookiesEarned, cps, clicks, goldenCookies,
        prestigeCount, buildings, upgrades, startTime
    }));
}

function loadGame() {
    let save = JSON.parse(localStorage.getItem("cookieClickerSave"));
    if(save) {
        cookies = save.cookies;
        totalCookiesEarned = save.totalCookiesEarned;
        cps = save.cps;
        clicks = save.clicks;
        goldenCookies = save.goldenCookies;
        prestigeCount = save.prestigeCount;
        startTime = save.startTime || Date.now();
        save.buildings.forEach((b,i)=> buildings[i].count = b.count);
        upgrades = save.upgrades || [];
        updateCookies();
        updateCPS();
        renderBuildings();
        renderUpgrades();
    }
}

// =====================
// üîº –§–£–ù–ö–¶–ò–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø
// =====================
function updateCookies() {
    document.getElementById("totalCookies").innerText = "–í—Å–µ–≥–æ –ø–µ—á–µ–Ω–µ–∫: " + Math.floor(cookies);
}

function updateCPS() {
    cps = buildings.reduce((acc,b)=> acc + b.count*b.cps,0);
    cps += goldenCookies * 0.001; // –ü—Ä–µ—Å—Ç–∏–∂ –±–æ–Ω—É—Å
    document.getElementById("cps").innerText = "CPS: " + cps.toFixed(2);
}

function updateTime() {
    let elapsed = Date.now() - startTime;
    let h = Math.floor(elapsed/3600000);
    let m = Math.floor((elapsed%3600000)/60000);
    let s = Math.floor((elapsed%60000)/1000);
    document.getElementById("totalTime").innerText = `–í—Ä–µ–º—è –≤ –∏–≥—Ä–µ: ${h.toString().padStart(2,'0')}:${m.toString().padStart(2,'0')}:${s.toString().padStart(2,'0')}`;
}

// =====================
// üç™ –ö–õ–ò–ö –ü–û –ü–ï–ß–ï–ù–¨–ö–ï
// =====================
document.getElementById("cookie").onclick = () => {
    clicks++;
    cookies += 1;
    totalCookiesEarned += 1;
    updateCookies();
    spawnFloatingCookie();
}

// =====================
// ‚ú® –í–°–ü–õ–´–í–ê–Æ–©–ò–ï –ü–ï–ß–ï–ù–¨–ö–ò
// =====================
function spawnFloatingCookie() {
    let f = document.createElement("div");
    f.className = "floating-cookie";
    f.innerText = "+1";
    f.style.left = (window.innerWidth/2 + (Math.random()*40-20)) + "px";
    f.style.top = (window.innerHeight/2 + (Math.random()*40-20)) + "px";
    document.body.appendChild(f);
    setTimeout(()=> f.remove(), 1000);
}

// =====================
// üè† –†–ï–ù–î–ï–† –ó–î–ê–ù–ò–ô
// =====================
function renderBuildings() {
    let container = document.getElementById("buildings");
    container.innerHTML = "";
    buildings.forEach((b,i)=>{
        let btn = document.createElement("button");
        btn.className = "building" + (cookies>=b.baseCost ? " available":"");
        btn.innerText = `${b.emoji} ${b.name} (x${b.count}) - CPS: ${(b.cps*b.count).toFixed(2)} - ${b.baseCost} üç™`;
        btn.onclick = () => buyBuilding(i);
        container.appendChild(btn);
    });
}

// =====================
// üè† –ü–û–ö–£–ü–ö–ê –ó–î–ê–ù–ò–Ø
// =====================
function buyBuilding(index) {
    let b = buildings[index];
    let cost = b.baseCost * Math.pow(1.15,b.count);
    if(cookies >= cost) {
        cookies -= cost;
        b.count++;
        totalCookiesEarned += cost;
        updateCookies();
        updateCPS();
        renderBuildings();
        renderUpgrades();

        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
        let bBtn = document.getElementsByClassName("building")[index];
        bBtn.classList.add("upgrade-anim");
        setTimeout(()=>bBtn.classList.remove("upgrade-anim"),500);

        // –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ CPS
        let rect = bBtn.getBoundingClientRect();
        spawnCPSPopup(rect.left + rect.width/2, rect.top, b.cps);
    }
}

// =====================
// üîº –†–ï–ù–î–ï–† –ê–ü–ì–†–ï–ô–î–û–í
// =====================
function renderUpgrades() {
    let container = document.getElementById("upgrades");
    container.innerHTML = "";
    buildings.forEach((b,i)=>{
        let level = upgrades[i] ? upgrades[i].level : 0;
        let cost = Math.floor(b.baseCost*10 + level*10 + Math.random()*0.5*(b.baseCost*10));
        let btn = document.createElement("button");
        btn.className = "upgrade" + (cookies>=cost ? " available":"");
        btn.innerText = `${b.emoji} ${b.name} x${level+2} - ${Math.floor(cost)} üç™`;
        btn.onclick = () => {
            if(cookies >= cost) {
                cookies -= cost;
                b.cps *= (level+2)/(level+1);
                upgrades[i] = {buildingIndex:i, level:level+1, cost:cost};
                updateCookies();
                updateCPS();
                renderBuildings();
                renderUpgrades();
                btn.classList.add("upgrade-anim");
                setTimeout(()=>btn.classList.remove("upgrade-anim"),500);

                // –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ CPS
                let rect = btn.getBoundingClientRect();
                spawnCPSPopup(rect.left + rect.width/2, rect.top, b.cps*(upgrades[i].level));
            }
        };
        container.appendChild(btn);
    });
}

// =====================
// üåü –ü–†–ï–°–¢–ò–ñ
// =====================
document.getElementById("prestigeButton").onclick = () => {
    if(cookies >= 1e12) {
        if(confirm("–°–¥–µ–ª–∞—Ç—å –ø—Ä–µ—Å—Ç–∏–∂?\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ 0.1% –±–æ–Ω—É—Å –∫ CPS –∑–∞ –∫–∞–∂–¥—É—é –∑–æ–ª–æ—Ç—É—é –ø–µ—á–µ–Ω—å–∫—É.")) {
            cookies = 0;
            buildings.forEach(b=>b.count=0);
            upgrades = [];
            goldenCookies += 1;
            prestigeCount++;
            updateCookies();
            updateCPS();
            renderBuildings();
            renderUpgrades();
        }
    } else {
        alert("–î–ª—è –ø—Ä–µ—Å—Ç–∏–∂–∞ –Ω—É–∂–Ω–æ –Ω–∞–∫–æ–ø–∏—Ç—å 1 —Ç—Ä–ª–Ω –ø–µ—á–µ–Ω–µ–∫!");
    }
}

// =====================
// ‚ú® –õ–ï–¢–Ø–©–ò–ï –ü–ï–ß–ï–ù–¨–ö–ò –ù–ê –§–û–ù–ï
// =====================
function spawnFlyingCookie() {
    let flying = document.createElement("div");
    flying.className = "flying-cookie";
    flying.innerText = "üç™";
    flying.style.left = Math.random() * window.innerWidth + "px";
    flying.style.top = window.innerHeight + "px";
    document.body.appendChild(flying);
    setTimeout(()=> flying.remove(),4000);
}
setInterval(spawnFlyingCookie,1000);

// =====================
// üí• –í–°–ü–õ–´–í–ê–Æ–©–ò–ô CPS
// =====================
function spawnCPSPopup(x, y, amount) {
    let f = document.createElement("div");
    f.className = "floating-cookie";
    f.innerText = `+${amount.toFixed(1)} CPS`;
    f.style.left = x + "px";
    f.style.top = y + "px";
    f.style.color = "#00ffff";
    f.style.fontWeight = "bold";
    document.body.appendChild(f);
    setTimeout(() => f.remove(), 1200);
}

// =====================
// ‚ú® –í–ï–õ–ò–ö–ò–ï –°–£–ú–ú–´ - –≠–§–§–ï–ö–¢
// =====================
function checkBigNumbers() {
    if(cookies >= 1e9 && !document.getElementById("bigEffect")) {
        let effect = document.createElement("div");
        effect.id = "bigEffect";
        effect.style.position = "fixed";
        effect.style.top = "0";
        effect.style.left = "0";
        effect.style.width = "100%";
        effect.style.height = "100%";
        effect.style.pointerEvents = "none";
        effect.style.backgroundImage = "url('https://i.imgur.com/4O1fS7x.png')";
        effect.style.backgroundSize = "contain";
        effect.style.backgroundRepeat = "no-repeat";
        effect.style.backgroundPosition = "center";
        effect.style.opacity = "0.7";
        document.body.appendChild(effect);
        setTimeout(()=> effect.remove(), 3000);
    }
}

// =====================
// üîÅ –û–ë–ù–û–í–õ–ï–ù–ò–ï CPS –ò –í–†–ï–ú–ï–ù–ò
// =====================
setInterval(()=>{
    cookies += cps/10; 
    updateCookies();
    updateCPS();
    updateTime();
    checkBigNumbers();
},100);

// =====================
// üíæ –ó–ê–ì–†–£–ó–ö–ê
// =====================
loadGame();

// =====================
// üíæ –ê–í–¢–û–°–ï–ô–í
// =====================
setInterval(saveGame,5000);

// =====================
// üì¶ –≠–ö–°–ü–û–†–¢ / –ò–ú–ü–û–†–¢
// =====================
function exportSave() {
    let saveStr = localStorage.getItem("cookieClickerSave");
    let blob = new Blob([saveStr], {type:"text/plain"});
    let a = document.createElement("a");
    a.href = URL.createObjectURL(blob);
    a.download = "cookiesave.txt";
    a.click();
}

function importSave(file) {
    let reader = new FileReader();
    reader.onload = function(e) {
        localStorage.setItem("cookieClickerSave", e.target.result);
        loadGame();
    };
    reader.readAsText(file);
}
